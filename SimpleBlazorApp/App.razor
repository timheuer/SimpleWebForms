<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="/" />
    <link rel="stylesheet" href="css/bootstrap/bootstrap.min.css" />
    <link href="css/site.css" rel="stylesheet" />
    <link href="SimpleBlazorApp.styles.css" rel="stylesheet" />
    <link rel="icon" type="image/png" href="favicon.png" />
    <HeadOutlet />
</head>

<body>
    <ErrorBoundary @ref="errorBoundary">
        <ChildContent>
            <Routes />
        </ChildContent>
        <ErrorContent Context="exception">
            <LayoutView Layout="@typeof(Components.Layout.MainLayout)">
                <main aria-labelledby="title" class="container mt-4">
                    <div class="row">
                        <div class="col-md-8 offset-md-2">
                            <div class="alert alert-danger" role="alert">
                                <h1 id="title" class="alert-heading">
                                    <i class="fas fa-exclamation-triangle"></i>
                                    Component Error
                                </h1>
                                <p class="mb-3">Sorry, an unexpected error has occurred in this component.</p>

                                @if (Environment.IsDevelopment())
                                {
                                    <hr>
                                    <div class="alert alert-warning">
                                        <strong>Error Details:</strong>
                                        <pre class="mt-2">@exception.Message</pre>
                                    </div>
                                }

                                <hr>
                                <p class="mb-0">
                                    <a href="/" class="btn btn-primary">
                                        <i class="fas fa-home"></i>
                                        Return to Home
                                    </a>
                                    <button type="button" class="btn btn-secondary ms-2" @onclick="RecoverFromError">
                                        <i class="fas fa-refresh"></i>
                                        Try Again
                                    </button>
                                </p>
                            </div>
                        </div>
                    </div>
                </main>
            </LayoutView>
        </ErrorContent>
    </ErrorBoundary>

    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            An error has occurred. This application may no longer respond until reloaded.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>

    <script src="_framework/blazor.web.js"></script>
    <script src="js/bootstrap.bundle.min.js"></script>
</body>

</html>

@code {
    private ErrorBoundary? errorBoundary;

    [Inject]
    private ILogger<App> Logger { get; set; } = default!;

    [Inject]
    private IWebHostEnvironment Environment { get; set; } = default!;

    [Inject]
    private NavigationManager Navigation { get; set; } = default!;

    protected override void OnInitialized()
    {
        // Subscribe to navigation events for logging and state management
        Navigation.LocationChanged += OnLocationChanged;
        Logger.LogDebug("App component initialized with navigation tracking");
    }

    protected override void OnParametersSet()
    {
        // Reset error boundary on navigation to ensure clean state
        errorBoundary?.Recover();
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        // Log navigation events for debugging and monitoring
        Logger.LogDebug("Navigation occurred from {PreviousLocation} to {NewLocation}",
        e.Location, Navigation.Uri);

        // Ensure error boundary is reset on navigation
        errorBoundary?.Recover();
    }

    private void RecoverFromError()
    {
        Logger.LogInformation("User initiated error recovery");
        errorBoundary?.Recover();
    }

    public void Dispose()
    {
        // Clean up navigation event subscription
        Navigation.LocationChanged -= OnLocationChanged;
    }
}