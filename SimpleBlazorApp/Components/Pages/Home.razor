@page "/"
@rendermode @(new InteractiveServerRenderMode())
@using SimpleBlazorApp.Services
@using Microsoft.AspNetCore.Components.Web
@inject IGreetingService GreetingService


<PageTitle>Home Page</PageTitle>

<main>
    <section class="row" aria-labelledby="aspnetTitle">
        <h1 id="aspnetTitle">ASP.NET</h1>
        <p class="lead">ASP.NET is a free web framework for building great Web sites and Web applications using HTML,
            CSS, and JavaScript.</p>
        <p><a href="http://www.asp.net" class="btn btn-primary btn-md">Learn more &raquo;</a></p>
    </section>

    <div class="row">
        <section class="col-md-4" aria-labelledby="gettingStartedTitle">
            <h2 id="gettingStartedTitle">Getting started</h2>
            <p>
                ASP.NET Web Forms lets you build dynamic websites using a familiar drag-and-drop, event-driven model.
                A design surface and hundreds of controls and components let you rapidly build sophisticated, powerful
                UI-driven sites with data access.
            </p>
            <p>
                <a class="btn btn-default" href="https://go.microsoft.com/fwlink/?LinkId=301948">Learn more &raquo;</a>
            </p>
        </section>
        <section class="col-md-4" aria-labelledby="librariesTitle">
            <h2 id="librariesTitle">Get more libraries</h2>
            <p>
                NuGet is a free Visual Studio extension that makes it easy to add, remove, and update libraries and
                tools in Visual Studio projects.
            </p>
            <p>
                <a class="btn btn-default" href="https://go.microsoft.com/fwlink/?LinkId=301949">Learn more &raquo;</a>
            </p>
        </section>
        <section class="col-md-4" aria-labelledby="hostingTitle">
            <h2 id="hostingTitle">Web Hosting</h2>
            <p>
                You can easily find a web hosting company that offers the right mix of features and price for your
                applications.
            </p>
            <p>
                <a class="btn btn-default" href="https://go.microsoft.com/fwlink/?LinkId=301950">Learn more &raquo;</a>
            </p>
        </section>
    </div>

    <hr />
    <section class="row" aria-labelledby="greetingFormTitle">
        <h2 id="greetingFormTitle">Say Hello</h2>
        <p>Enter your name and click the button to be greeted. The value is stored in ViewState.</p>
        <div class="form-group">
            <label for="nameInput" class="control-label">Name</label>
            <input id="nameInput" type="text" class="form-control" @bind="userName" />
        </div>
        <div class="form-group" style="margin-top:10px;">
            <button type="button" class="btn btn-primary" @onclick="HandleGreetButtonClick">Greet Me</button>
        </div>
        <div class="form-group" style="margin-top:10px;">
            @if (!string.IsNullOrEmpty(greetingMessage))
            {
                <span class="text-info">@greetingMessage</span>
            }
        </div>
    </section>
</main>

@code {
    private string userName = string.Empty;
    private string greetingMessage = string.Empty;

    [Inject]
    private ILogger<Home> Logger { get; set; } = default!;

    private void HandleGreetButtonClick()
    {
        using var scope = Logger.BeginScope("HandleGreetButtonClick");

        Logger.LogDebug("Greeting button clicked by user");

        try
        {
            // Log the interaction (without sensitive data)
            Logger.LogInformation("User initiated greeting request with input length: {InputLength}",
            userName?.Length ?? 0);

            // Use the greeting service to generate the greeting message
            greetingMessage = GreetingService.GenerateGreeting(userName ?? string.Empty);

            Logger.LogDebug("Greeting message generated successfully");
        }
        catch (Exception ex)
        {
            // Handle any errors that might occur during greeting generation
            Logger.LogError(ex, "Error occurred while processing greeting request");

            greetingMessage = "An error occurred while processing your request.";

            // Log additional context for debugging
            Logger.LogWarning("Fallback error message displayed to user due to greeting generation failure");
        }
    }

    protected override void OnInitialized()
    {
        Logger.LogDebug("Home component initialized");
        base.OnInitialized();
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            Logger.LogInformation("Home page rendered for the first time");
        }
        base.OnAfterRender(firstRender);
    }
}